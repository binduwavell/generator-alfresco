<?xml version="1.0" encoding="UTF-8"?>
<!-- ===================================================================================================================
    This context file is used only in a development IDE for rapid development,
    it is never released with the Share.war
    =================================================================================================================-->

<!-- Setup a virtual context for the /share webapp.
     The run profile uses the tomcat7-maven-plugin to kick off the webapp and it is configured with the
     webapp resources and path (i.e. /share). -->
<Context>
    <Resources className="org.apache.naming.resources.VirtualDirContext"
               extraResourcePaths="/=${project.parent.basedir}/${rootArtifactId}-share-amp/target/amp/web" />
    <!-- IMPORTANT! The extraResourcePaths string need to be on one continues line, so if we add another Share AMP,
                    it would look something like this:
    <Resources className="org.apache.naming.resources.VirtualDirContext"
               extraResourcePaths="/=${project.parent.basedir}/${rootArtifactId}-share-amp/target/amp/web,/=${project.parent.basedir}/component-a-share/target/amp/web" />
               -->

    <!-- Configure where the Share (share.war) web application can load classes, config, and test classes (in that order) -->
    <!-- Setup the virtual class path like this:
         1) ${rootArtifactId}-share-amp/target/classes
         2) ${rootArtifactId}-share-amp/target/amp/config
         3) ${rootArtifactId}-share-amp/target/test-classes
         4)     Add other AMP paths here....
         5) share/target/test-classes              (loads the share-config-custom.xml used during test runs)

         This way mvn compile can be invoked and all changes will be picked up
    -->
    <Loader className="org.apache.catalina.loader.VirtualWebappLoader"
            searchVirtualFirst="true"
            virtualClasspath="${project.parent.basedir}/${rootArtifactId}-share-amp/target/classes;
            ${project.parent.basedir}/${rootArtifactId}-share-amp/target/amp/config;
            ${project.parent.basedir}/${rootArtifactId}-share-amp/target/test-classes;
            ${project.parent.basedir}/share/target/test-classes" />

    <!-- Load from all directories, not just when the META-INF directory is found in exploded JAR -->
    <JarScanner scanAllDirectories="true" />
</Context>



